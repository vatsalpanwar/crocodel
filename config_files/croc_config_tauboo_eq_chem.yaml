infostring: 
  info: CRIRES_tauBoo_b_multinest_Reportv2_with_Asplun2020_abund
  N_PCA_info: '9_test_eq_chem_' 
  ## Narrower only for H2O abundance as compared to the retrieval : 13-01-2024T00-06-48
  
n_processes: 50

retrieval_setup:
  sampler: 'multinest' # Can be dynesty 
  N_live : 1000

workdir:
  results: '/home/astro/phsprd/tauBoo/results/retrievals/'
  KpVsys_maps_fixed_params: '/home/astro/phsprd/tauBoo/results/KpVsys_maps_fixed_params/'

data: # Each high level key under data should be the name of the instrument.
  crires:
    method: emission
    resolution: 100000
    dates:
      '2011-04-02': ['/home/astro/phsprd/tauBoo/data/spdatacubes/2011-04-02_spdd.npy'] # In future can also be 'transmission' or 'phase curve' 
      '2011-04-09': ['/home/astro/phsprd/tauBoo/data/spdatacubes/2011-04-09_spdd.npy']
      '2011-04-15': ['/home/astro/phsprd/tauBoo/data/spdatacubes/2011-04-15_spdd.npy']    
    N_order_all : 4
    skip_order_inds: [3] # specify the order indices you want to exclude from the analyses
    stellcorr_params:
      N_PCA_all_order_common: True
      N_PCA_all_order_common_value: 9
      # Do N_PCA_all_order_common False and uncomment below if you want different N_PCA for some or all orders. 
      N_PCA_dd: {
            '2011-04-02':{0: 9,
                          1: 9,
                          2: 9,
                          3: 9
          },
            '2011-04-09':{0: 9,
                          1: 9,
                          2: 9,
                          3: 9
          },

            '2011-04-15':{0: 9,
                          1: 9,
                          2: 9,
                          3: 9
          },
    
                }

      post_pca_mask_threshold : 'std'
      pre_pca_mask_flux_threshold : 'none' # 0.4 # 0.5 ## So if flux with respect to the continuum at 1.0 goes below 0.5, exclude those lines.
      data_norm_already: False
      # pre_pca_mask_flux_threshold : 'none'
      # post_pca_mask_threshold : 'none'
      # post_pca_mask_threshold : 'var'


      badcolmask_inds : {
                  '2011-04-02':{0: [ [0, 16] , [1008,1024] ],
                                1: [[0, 16], [817,830], [885,898], [1008,1024]],
                                2: [[0, 16], [1008,1024]],
                                3: [[0, 16], [1008,1024]]
                },
                  '2011-04-09':{0: [ [0, 16] , [1008,1024] ],
                                1: [[0, 16], [817,830], [885,898], [1008,1024]],
                                2: [[0, 16], [1008,1024]],
                                3: [[0, 16], [1008,1024]]
                },

                  '2011-04-15':{0: [ [0, 16] , [1008,1024] ],
                                1: [[0, 16], [818,832], [885,898], [1008,1024]],
                                2: [[0, 16], [1008,1024]],
                                3: [[0, 16], [1008,1024]]
                },


                }
    cross_correlation_params:
      Vsys_range: [-25., 25.]
      Kp_range: [100., 125.]
      Vsys_range_trail: [-350., 350.]
      vel_window: [325,-325]
      
      Vsys_step: 1.
      Kp_step: 1.
      model_reprocess: True

model:
  retrieval_type: ind_instrument # Can also be joint_multi_instrument, depending 
                                 # on if you want to run the retrieval on just each instrument listed above (one or more)
                                 # independently or jointly. This is to be implemented in future.s 
  
  chemistry: 'eq_chem' # 'eq_chem' ## Can be 'eq_chem' or 'free_chem' ; if set to 'eq_chem', then make sure that the free params have 'c_to_o' and/or 'o_to_h' as the free parameters.  
  logZ_planet: 0.0
  C_to_O: 0.5


  ######## For tau Boo
  R_star: 1.46 # in terms of R_sun 
  T_eff: 6300. # K 
  Vsys: -16.4 # In km/s. 

  # Planetary parameters 
  R_planet: 1.25 # In Jupiter radius
  log_g: 4.013
  P_ref: 0.0 # in log(bar)
  P_min: 1.0e-8 # in bars, 1 bar is 1e5 Pa,  so in Pa this is 1.0e-1
  P_max: 1.0e+3 # in bars, so in Pa this is 1.0e7
  N_layers: 50
  lam_min: 2.25 # in microns  
  lam_max: 2.35 # in microns 
  R_power: 250000 # Resolving power (can also do higher than instrument resolution)
  spacing: R # How do you want the wavelength points to be spaced? Use R for computing models at constant resolving power. 
  log_fs: 0.0
  phase_offset: 0.
  Kp: 110.92


  TP_type: Linear # In future allow for custom, Guillot, or other prescriptions.
  # # From Sid'e email and looking at set_T function, 
  # # Order is (P1,T1),(P2,T2),[P0=,T0=], i.e. down to top. P1 must be greater than P2! and in log P(Pa)
  P1: 4.7
  T1: 1650.
  P2: -1
  T2: 300.

  # TP_type: custom_fixed # If it is a precomputed TP profile that you just want to take as input to GENESIS to calculate the forward model.
  # TP_path: '/home/astro/phsprd/wasp122b/models/abundances_TP_profiles_from_Mike/Mike_TP_cold.csv' # Path to an ascii file with the TP profile values, first column pressure in bars, second column temperature in K.

  # TP_type: Guillot # In future allow for custom, Guillot, or other prescriptions.
  # T_int: 100.
  # T_irr: 2000. 
  # log_gamma: 0. 
  # log_kappa_IR: 0.
  # f_global: 1. # Setting this to one let's it be folded into T_eq
  
  # TP_type: Madhusudhan_Seager # In future allow for custom, Guillot, or other prescriptions.
  # ###### Initial params here set from a fit of the TP to Mike's RCTE cold trap TP 
  # ### Make sure that P1 < P3
  # T_set: 2250.
  # alpha1: 0.9 
  # alpha2: 0.098 
  # log_P1: -4.2
  # log_P2: -2.7 # Setting this to one let's it be folded into T_eq
  # log_P3: -1.84

  # Planetary Abundances in terms of the Volume Mixing Ratios of each species. log10 of the VMRs defined here.
  abundances:
    co: -3
    h2o: -3
    ch4: -7
    nh3: -7
    co2: -7
    hcn: -7
    # c2h2: -3 # Don't include unless retrieving
    he: -0.77

  species_name_fastchem:
    co: 'C1O1'
    h2o: 'H2O1'
    ch4: 'C1H4'
    nh3: 'H3N1'
    co2: 'C1O2'
    hcn: 'C1H1N1_1'
    he: 'He'

  cl_P: 0.0 # log(cloud_pressure) in bars 

  # Retrieval free parameters and their priors bounds, starting value, and sigma for emcee 
  # The order of bound is [min, max, start value or mean value for Gaussian priors, sigma]

  free_params:
    ####### fix_test is for when you want to run something for a fixed set of params 
    # phase_offset:
    #   prior: Uniform
    #   bound: [-0.02,0.02,-0.009,0.01]

    log_fs:
      fix_test: -0.65
      prior: Uniform # 
      bound: [-4., 1.,0., 0.1]
    Kp:
      fix_test: 110.73
      prior: Uniform
      bound: [100, 120., 110.,1.]
    Vsys:
      fix_test: -17.11
      prior: Uniform
      bound: [-20., 0., -16.4, 1.] ###measured value is ~ 34 km/s
    ### ### ### ### ### ### ### ###
    ### For a Linear gradient profile
    ### ### ### ### ### ### ### ### 
    P1:
      fix_test: 5.63
      prior: Uniform
      bound: [-3.0, 7.0, 5., 1.] # In log Pa. remember 10^5 Pa  = 1 bar 
    T1:
      fix_test: 2447.46
      prior: Uniform
      bound: [300., 3000., 1600., 10.] 
    P2:
      fix_test: 3.57
      prior: Uniform
      bound: [-3.0,7.0,0., 1.] # In log Pa; remember 10^5 Pa  = 1 bar 
    T2:
      fix_test: 1880.27
      prior: Uniform
      bound: [300., 3000., 1000., 10.] 

    ### ### ### ### ### ### ### ### ###
    ### For Guillot profile 
     ### ### ### ### ### ### ### ### ###
    # T_int: 
    #   prior: Uniform
    #   bound: [100., 300., 150, 10.] 
    # T_irr: 
    #   prior: Uniform
    #   bound: [1200., 3500., 1650, 10.] 
    # log_gamma: 
    #   prior: Uniform
    #   bound: [-10.,1., 0., 1.]
    # log_kappa_IR: 
    #   prior: Uniform
    #   bound: [-10., 0., 0., 1.]

    ### ### ### ### ### ### ### ### ###
    ### For Madhusudhan_Seager TP profile 
    ### ### ### ### ### ### ### ### ###
    # T_set: 
    #   prior: Uniform
    #   bound: [1500., 3000., 150, 10.] 
    # alpha1: 
    #   prior: Uniform
    #   bound: [0.02, 1., 0.02, 0.001] 
    # alpha2: 
    #   prior: Uniform
    #   bound: [0.02, 1., 0.02, 0.001] 
    # log_P1: ## in log bars 
    #   prior: Uniform
    #   bound: [-6., 2., 0., 1.]
    # log_P2: ## in log bars 
    #   prior: Uniform
    #   bound: [-6., 2., 0., 1.]
    # log_P3: ## in log bars 
    #   prior: Uniform
    #   bound: [-6., 2., 0., 1.]

    logZ_planet:
      fix_test: 0.0
      prior: Uniform
      bound: [-4., 4., 0.0,1.] # log10 of the VMRs # change to -10 to -1
    
    C_to_O:
      fix_test: 0.5
      prior: Uniform
      bound: [0., 2., 0.5,0.1] # log10 of the VMRs # change to -10 to -1


    # co:
    #   fix_test: -4.22
    #   prior: Uniform
    #   bound: [-15., -0.5, -3., 1.] # log10 of the VMRs # change to -10 to -1

    # h2o: 
    #   fix_test: -4.67
    #   prior: Uniform
    #   bound: [-30., -0.5, -5., 1.] # log10 of the VMRs # change to -10 to -1
    
    # ch4:
    #   fix_test: -5.02
    #   prior: Uniform
    #   bound: [-15., -0.5, -7., 1.] # log10 of the VMRs # change to -10 to -1
      
    # nh3:
    #   fix_test: -5.79
    #   prior: Uniform
    #   bound: [-15., -0.5, -7., 1.] # log10 of the VMRs # change to -10 to -1

    # co2:
    #   fix_test: -5.1
    #   prior: Uniform
    #   bound: [-15., -0.5, -7., 1.] # log10 of the VMRs # change to -10 to -1

    # hcn:
    #   fix_test: -6.37
    #   prior: Uniform
    #   bound: [-15., -0.5, -7., 1.] # log10 of the VMRs # change to -10 to -1
  


